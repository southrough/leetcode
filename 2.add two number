# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode:
        root=None
        if (l1 or l2):
            root = ListNode(0)
            res = root
        while(l1 or l2):
            if(l1!=None and l2!=None):
                res.val += l1.val + l2.val
                l1=l1.next
                l2=l2.next
                if(res.val>=10):
                    res.val-=10
                    res.next = ListNode(1)
                    res=res.next
                    continue
                if(l1 or l2):
                    res.next = ListNode(0)
                    res = res.next
                    continue
                break
            if(l2!=None):
                res.val+=l2.val
                l2 = l2.next
                if (res.val >= 10):
                    res.val -= 10
                    res.next = ListNode(1)
                    res = res.next
                    continue
                if(l2):
                    res.next = ListNode(0)
                    res = res.next
                    continue
                break
            if(l1!=None):
                res.val+=l1.val
                l1 = l1.next
                if (res.val >= 10):
                    res.val -= 10
                    res.next = ListNode(1)
                    res = res.next
                    continue
                if(l1):
                    res.next = ListNode(0)
                    res = res.next
                    continue
                break
        return root
